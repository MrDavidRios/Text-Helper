chrome.storage.sync.get('currentURL', (data) => {
	keyElements = {
		docs: new KeyElements(
			'div.docs-findandreplacedialog span.modal-dialog-title-close',
			'#docs-findandreplacedialog-input',
			'#docs-findandreplacedialog-replace-input',
			'#docs-findandreplacedialog-button-replace-all'
		),
		sheets: new KeyElements(
			'div.waffle-find-replace-dialog span.modal-dialog-title-close',
			'input[aria-labelledby*="findLabel"]',
			'input[aria-labelledby*="replaceLabel"]',
			'button[name="replaceAll"]'
		),
		slides: new KeyElements(
			'div.docs-findandreplacedialog span.modal-dialog-title-close',
			'#docs-findandreplacedialog-input',
			'#docs-findandreplacedialog-replace-input',
			'#docs-findandreplacedialog-button-replace-all'
		)
	};

	const url = data.currentURL;

	let site = '';

	if (url.includes('docs.google.com')) site = 'docs';
	if (url.includes('docs.google.com/spreadsheets/')) site = 'sheets';
	if (url.includes('docs.google.com/presentation/')) site = 'slides';
	if (url.includes('docs.google.com/forms')) site = 'forms';
	if (url.includes('mail.google.com')) site = 'gmail';

	if (url.includes('docs.google.com') || site == 'gmail') {
		const focusWindow = window.open('');
		focusWindow.close();

		chrome.storage.sync.get('replacementPhrases', async (data) => {
			const replacementPhrases = data['replacementPhrases'];

			for (let i = 0; i < replacementPhrases.length; i++) {
				const phrase = replacementPhrases[i];

				if (phrase['enabled']) {
					switch (site) {
						case 'docs':
						case 'sheets':
						case 'slides':
							await replaceValuesOnGoogleService(phrase.toReplace, phrase.replaceWith, site);
							break;
						case 'gmail':
							await replaceValuesOnGmail(phrase.toReplace, phrase.replaceWith);
							break;
						case 'forms':
							await replaceValuesOnForms(phrase.toReplace, phrase.replaceWith);
							break;
					}
				}
			}
		});
	}
});

async function replaceValuesOnGmail(valueToReplace, replacementValue) {
	chrome.storage.sync.get('lastSelectedGmailTextboxID', async (data) => {
		const lastSelectedTextboxID = data['lastSelectedGmailTextboxID'];
		const lastSelectedTextbox = document.getElementById(lastSelectedTextboxID);

		if (lastSelectedTextbox !== undefined) lastSelectedTextbox.innerHTML = lastSelectedTextbox.innerHTML.replaceAll(valueToReplace, replacementValue);
	});
}

async function replaceValuesOnGoogleService(valueToReplace, replacementValue, site) {
	let advanceInterval = 100; //Advancement interval in ms

	return new Promise(async (resolve) => {
		//Press Ctrl + H to bring up 'replace all' menu
		openReplaceAllMenu();

		//Cache important UI elements from 'replace all' menu
		const replaceMenuCloseButton = document.querySelector(keyElements[site].replaceMenuCloseButton);
		const findInput = document.querySelector(keyElements[site].findInput);
		const replaceInput = document.querySelector(keyElements[site].replaceInput);
		const replaceAllButton = document.querySelector(keyElements[site].replaceAllButton);

		//Delay different phases of this procedure by 100ms so that there is enough time for menu elements to be generated by docs
		await sleep(advanceInterval);

		//Put the value to be replaced in the 'find' input field
		findInput.value = valueToReplace;

		if (site == 'docs' || site == 'slides') {
			clickElement(replaceMenuCloseButton);
			openReplaceAllMenu();

			await sleep(advanceInterval);
		}

		replaceInput.click();
		replaceInput.focus();

		//Put the replacement value in the 'replace with' input field
		replaceInput.value = replacementValue;

		if (site == 'sheets') {
			const sheetsFindReplaceDialog = document.querySelector('div.waffle-find-replace-dialog');

			sheetsFindReplaceDialog.click();
			sheetsFindReplaceDialog.focus();
		}

		//Click the 'replace all' button
		clickElement(replaceAllButton);

		//Reset input fields
		findInput.value = '';
		replaceInput.value = '';

		//Close Menu
		clickElement(replaceMenuCloseButton);

		await sleep(advanceInterval * 2);

		resolve();
	});
}

async function replaceValuesOnForms(valueToReplace, replacementValue) {
	const textareas = document.querySelectorAll('textarea');

	for (let i = 0; i < textareas.length; i++) {
		const textarea = textareas[i];

		textarea.focus();

		await sleep(1000);

		textarea.textContent = textarea.textContent.replaceAll(valueToReplace, replacementValue);
		textarea.setAttribute('data-initial-value', textarea.textContent);

		textarea.dispatchEvent(new Event('change', { bubbles: true }));
	}

	document.querySelectorAll('input[type="text"]').forEach((input) => {
		input.value = input.value.replaceAll(valueToReplace, replacementValue);
		input.setAttribute('data-initial-value', input.value);

		input.dispatchEvent(new Event('change', { bubbles: true }));
	});
}

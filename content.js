chrome.storage.sync.get('currentURL', (data) => {
	keyElements = {
		docs: new KeyElements(
			'div.docs-findandreplacedialog span.modal-dialog-title-close',
			'#docs-findandreplacedialog-input',
			'#docs-findandreplacedialog-replace-input',
			'#docs-findandreplacedialog-button-replace-all'
		),
		sheets: new KeyElements(
			'div.waffle-find-replace-dialog span.modal-dialog-title-close',
			'input[aria-labelledby*="findLabel"]',
			'input[aria-labelledby*="replaceLabel"]',
			'button[name="replaceAll"]'
		)
	};

	const url = data.currentURL;

	//Make sure this code only runs on google docs (for now)
	let site = '';

	if (url.includes('docs.google.com')) site = 'docs';
	if (url.includes('docs.google.com/spreadsheets/')) site = 'sheets';

	if (url.includes('docs.google.com') || url.includes('sheets.google.com')) {
		const focusWindow = window.open('');
		focusWindow.close();

		chrome.storage.sync.get('replacementPhrases', async (data) => {
			const replacementPhrases = data['replacementPhrases'];

			console.log(replacementPhrases);

			for (let i = 0; i < replacementPhrases.length; i++) {
				const phrase = replacementPhrases[i];

				if (phrase['enabled']) await replaceValuesOnGoogleService(phrase.toReplace, phrase.replaceWith, site);
			}
		});
	}
});

async function replaceValuesOnGoogleService(valueToReplace, replacementValue, site) {
	let advanceInterval = 100; //Advancement interval in ms

	return new Promise((resolve) => {
		//Press Ctrl + H to bring up 'replace all' menu
		openReplaceAllMenu();

		console.log(valueToReplace, replacementValue);

		//Cache important UI elements from 'replace all' menu
		const replaceMenuCloseButton = document.querySelector(keyElements[site].replaceMenuCloseButton);
		const findInput = document.querySelector(keyElements[site].findInput);
		const replaceInput = document.querySelector(keyElements[site].replaceInput);
		const replaceAllButton = document.querySelector(keyElements[site].replaceAllButton);

		//Delay different phases of this procedure by 100ms so that there is enough time for menu elements to be generated by docs
		setTimeout(() => {
			//Put the value to be replaced in the 'find' input field
			findInput.value = valueToReplace;

			//This quickly closes and re-opens the menu, making sure that the 'Replace All' button is enabled
			clickElement(replaceMenuCloseButton);
			openReplaceAllMenu();

			setTimeout(() => {
				//Put the replacement value in the 'replace with' input field
				replaceInput.value = replacementValue;

				//Click the 'replace all' button
				clickElement(replaceAllButton);

				//Reset input fields
				findInput.value = '';
				replaceInput.value = '';

				//Close Menu
				clickElement(replaceMenuCloseButton);

				resolve();
			}, advanceInterval);
		}, advanceInterval);
	});
}
